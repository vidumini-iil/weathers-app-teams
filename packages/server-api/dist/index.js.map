<<<<<<< HEAD
{"version":3,"file":"index.js","sources":["../src/api/api.tsx","../src/components/city/data/Data.tsx","../src/components/city/city.tsx","../src/index.tsx"],"sourcesContent":["export const ApiIdCity = \"cdd9baf674d2a4f1a402cf0d5655c4ee\";\r\n\r\n","export const Data =  {\"List\":[{\"CityCode\":\"1248991\",\"CityName\":\"Colombo\",\"Temp\":\"33.0\",\"Status\":\"Clouds\"},{\"CityCode\":\"1850147\",\"CityName\":\"Tokyo\",\"Temp\":\"8.6\",\"Status\":\"Clear\"},{\"CityCode\":\"2644210\",\"CityName\":\"Liverpool\",\"Temp\":\"16.5\",\"Status\":\"Rain\"},{\"CityCode\":\"2988507\",\"CityName\":\"Paris\",\"Temp\":\"22.4\",\"Status\":\"Clear\"},{\"CityCode\":\"2147714\",\"CityName\":\"Sydney\",\"Temp\":\"27.3\",\"Status\":\"Rain\"},{\"CityCode\":\"4930956\",\"CityName\":\"Boston\",\"Temp\":\"4.2\",\"Status\":\"Mist\"},{\"CityCode\":\"1796236\",\"CityName\":\"Shanghai\",\"Temp\":\"10.1\",\"Status\":\"Clouds\"},{\"CityCode\":\"3143244\",\"CityName\":\"Oslo\",\"Temp\":\"-3.9\",\"Status\":\"Clear\"}]};","import { ApiIdCity } from \"../../api/api\";\r\nimport { Data } from \"./data/Data\";\r\n\r\nexport const getCities = () => {\r\n    try {\r\n      const getData = Data.List;\r\n  \r\n      const loadedCitiesCode = [];\r\n      \r\n      for (const key in getData) {\r\n        loadedCitiesCode.push(getData[key].CityCode);\r\n      }\r\n  \r\n      const stringCitiesCode = loadedCitiesCode.join(\",\");\r\n      console.log(\"stringCitiesCode \", stringCitiesCode);\r\n  \r\n      getCurrentWeather(stringCitiesCode);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"error\");\r\n      //throw error;\r\n    }\r\n  };\r\n  \r\n\r\n  const getCurrentWeather = async (data: string) => {\r\n \r\n    const apiUrl = `http://api.openweathermap.org/data/2.5/group?id=${data}&units=metric&appid=${ApiIdCity}`;\r\n    const resData = await fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n          return data;\r\n      });\r\n\r\n    const payload = resData.list;\r\n    console.log(payload, \" payload HwwHHello\");\r\n\r\n    return payload;\r\n}","import * as React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport {getCities} from \"./components/city/city\";\r\n\r\ninterface Props {\r\n    text: string;\r\n}\r\n\r\nexport const ExampleComponent = ({ text }: Props) => {\r\n    return <div className={styles.test}>test : {text}</div>;\r\n};\r\n\r\nexport {getCities};\r\n"],"names":["ApiIdCity","Data","getCities","getData","List","loadedCitiesCode","key","push","CityCode","stringCitiesCode","join","console","log","getCurrentWeather","error","data","apiUrl","fetch","then","response","json","resData","payload","list","ExampleComponent","text","React","className","styles","test"],"mappings":";;;;AAAO,IAAMA,SAAS,GAAG,kCAAlB;;ACAA,IAAMC,IAAI,GAAI;AAAC,UAAO,CAAC;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,SAAjC;AAA2C,YAAO,MAAlD;AAAyD,cAAS;AAAlE,GAAD,EAA6E;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,OAAjC;AAAyC,YAAO,KAAhD;AAAsD,cAAS;AAA/D,GAA7E,EAAqJ;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,WAAjC;AAA6C,YAAO,MAApD;AAA2D,cAAS;AAApE,GAArJ,EAAiO;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,OAAjC;AAAyC,YAAO,MAAhD;AAAuD,cAAS;AAAhE,GAAjO,EAA0S;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,QAAjC;AAA0C,YAAO,MAAjD;AAAwD,cAAS;AAAjE,GAA1S,EAAmX;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,QAAjC;AAA0C,YAAO,KAAjD;AAAuD,cAAS;AAAhE,GAAnX,EAA2b;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,UAAjC;AAA4C,YAAO,MAAnD;AAA0D,cAAS;AAAnE,GAA3b,EAAwgB;AAAC,gBAAW,SAAZ;AAAsB,gBAAW,MAAjC;AAAwC,YAAO,MAA/C;AAAsD,cAAS;AAA/D,GAAxgB;AAAR,CAAd;;ICGMC,SAAS,GAAG,SAAZA,SAAY;AACrB,MAAI;AACF,QAAMC,OAAO,GAAGF,IAAI,CAACG,IAArB;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,IAAMC,GAAX,IAAkBH,OAAlB,EAA2B;AACzBE,MAAAA,gBAAgB,CAACE,IAAjB,CAAsBJ,OAAO,CAACG,GAAD,CAAP,CAAaE,QAAnC;AACD;;AAED,QAAMC,gBAAgB,GAAGJ,gBAAgB,CAACK,IAAjB,CAAsB,GAAtB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,gBAAjC;AAEAI,IAAAA,iBAAiB,CAACJ,gBAAD,CAAjB;AAED,GAdD,CAcE,OAAOK,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAED;AACF,CApBI;;AAuBL,IAAMC,iBAAiB,YAAjBA,iBAAiB,CAAUE,IAAV;AAAA;AAErB,QAAMC,MAAM,wDAAsDD,IAAtD,4BAAiFf,SAA7F;2BACsBiB,KAAK,CAACD,MAAD,CAAL,CACnBE,IADmB,CACd,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADc,EAEnBF,IAFmB,CAEd,UAACH,IAAD;AACF,aAAOA,IAAP;AACH,KAJmB,kBAAhBM;AAMN,UAAMC,OAAO,GAAGD,OAAO,CAACE,IAAxB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ,EAAqB,oBAArB;AAEA,aAAOA,OAAP;;AACH,GAbwB;AAAA;AAAA;AAAA,CAAvB;;IClBWE,gBAAgB,GAAG,SAAnBA,gBAAmB;MAAGC,YAAAA;AAC/B,SAAOC,mBAAA,MAAA;AAAKC,IAAAA,SAAS,EAAEC,MAAM,CAACC;GAAvB,WAAA,EAAqCJ,IAArC,CAAP;AACH,CAFM;;;;;"}
=======
{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ninterface Props {\r\n    text: string;\r\n}\r\n\r\nexport const ExampleComponent = ({ text }: Props) => {\r\n    return <div className={styles.test}>test : {text}</div>;\r\n};\r\n"],"names":["ExampleComponent","text","React","className","styles","test"],"mappings":";;;;IAOaA,gBAAgB,GAAG,SAAnBA,gBAAmB;MAAGC,YAAAA;AAC/B,SAAOC,mBAAA,MAAA;AAAKC,IAAAA,SAAS,EAAEC,MAAM,CAACC;GAAvB,WAAA,EAAqCJ,IAArC,CAAP;AACH,CAFM;;;;"}
>>>>>>> f246de0cc6b3edd4cf79d78495560f67789c5cdf
